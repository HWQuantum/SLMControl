* SLMControl
A cross-platform python library for controlling SLMs using (mostly) PyQt5.

Contains a bunch of qt widgets which allow for controlling SLM screens,
setting the lookup tables, setting zernike polynomial corrections,
choosing which desktop they display on, etc...

If want to control two SLMs there's a program already written for that.
Just run SLMControl/slm_display.py, and it'll appear.

** Use
   There's two main files here:
   - coincidence_counting.py
   - slm_display.py
     
   You use slm_display.py for displaying OAM patterns on two slms at the same time
   You use coincidence_counting.py for... coincidence counting :^)
   For coincidence counting to run, you need the hhlib_sys library for controlling 
   your Hydra Harp 400, which can be found [[https://github.com/HWQuantum/coincidence-counter][here]].
   Follow the instructions to compile that, then place the resulting library into the SLMControl
   folder in this repo.

** Requirements
*** Python requirements
    - PyQt5
    - pyqtgraph
    - numpy

** Todos
   - [X] Add in a saving/loading function
   - [X] Add in the ability to change the lookup table at more points
   - [X] Make a list where more LUT widgets can be added
   - [X] Maybe show the LUT on a little plot
   - [X] Work on the opening windows on different desktops (it doesn't work correctly)
   - [X] Make the slm windows close when the main widget closes
   - [X] Have the ability to reshow the slm windows when closed/hidden
   - [X] Have the ability to put zernike functions onto the beam? (add an amplitude or something)
   - [X] In coincidence_counting, make the measure_and_get_values function not block the GUI
     this is caused by the rust function not release the GIL
     maybe pyobject3 has some way to release the GIL in this function?
